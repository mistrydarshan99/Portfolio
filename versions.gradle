/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/

ext.deps = [:]

// Versions
def versions = [:]

// Gradle and kotlin
versions.gradle = '3.5.0-alpha07'
versions.gradle_version_update = '0.21.0'
versions.kotlin = '1.3.21'
versions.google = '4.2.0'
versions.google_material_design = '1.1.0-alpha04'
versions.google_guava = '27.0.1-android'
versions.fabric_tools = '1.28.0'

// AndroidX foundation
versions.androidx_core = '1.1.0-alpha05'
versions.androidx_legacy = '1.0.0'
versions.androidx_futures = '1.0.0-alpha03'
versions.androidx_appcompat = '1.1.0-alpha03'
versions.androidx_vector_drawable = '1.1.0-alpha01'
versions.androidx_constraint_layout = '2.0.0-alpha3'
versions.androidx_view_pager = '1.0.0'
versions.androidx_emoji_appcompat = '1.0.0'
versions.androidx_espresso = '3.2.0-alpha02'
versions.androidx_test = '1.1.2-alpha02'
versions.androidx_arch_test = '2.0.0'

// Architecture components
versions.androidx_lifecycle = '2.1.0-alpha03'
versions.androidx_room = '2.1.0-alpha05'
versions.androidx_paging = '2.1.0'
versions.androidx_navigation_controller = '2.0.0'
versions.androidx_work_manager = '2.0.0-rc01'

// Firebase components
versions.firebase_core = '16.0.8'
versions.firebase_crashlytics = '2.9.9'
versions.firebase_remote_config = '16.4.0'
versions.firebase_app_indexing = '17.1.0'

// Dependency injection
versions.koin = '2.0.0-beta-5'

// Reactive stream
versions.kotlinx_coroutines = '1.1.1'

// Network components
versions.retrofit = '2.5.0'
versions.retrofit_koltin_coroutines_adapter = '0.9.2'
versions.moshi = '1.8.0'
versions.okhttp = '3.14.0'
versions.glide = '4.9.0'
versions.stetho = '1.5.0'

// Utilities
versions.leak_canary = '1.6.3'
versions.facebook_shimmer = '0.4.0'
versions.timber = '4.7.1'
versions.three_ten_abp = '1.2.0'
versions.circle_image_view = '3.0.0'
versions.sdp = '1.0.6'

// Test components
versions.junit = '4.13-beta-2'

// SDK and Tools
def build_versions = [:]
build_versions.app_name = 'Portfolio'
build_versions.app_id = 'me.tumur.portfolio'
build_versions.min_sdk = 21
build_versions.target_sdk = 28
build_versions.compile_sdk = 'android-P'
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions // Add build versions to extension

// Build variants
def build_variants = [:]
build_variants.major = 0 // max two digits
build_variants.minor = 0 // max two digits
build_variants.patch = 0 // max two digits
build_variants.build = 1 // max three digits
ext.build_variants = build_variants // Add build variants to extension

// Dependencies
def deps = [:]

// Gradle
def gradle = [:]
gradle.build = "com.android.tools.build:gradle:$versions.gradle"
gradle.version_update = "com.github.ben-manes:gradle-versions-plugin:$versions.gradle_version_update"
deps.gradle = gradle

// Kotlin
def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin = kotlin

// Fabric
def fabric = [:]
fabric.tools = "io.fabric.tools:gradle:$versions.fabric_tools"
deps.fabric = fabric

// Google
def google = [:]
google.services = "com.google.gms:google-services:$versions.google"
google.material = "com.google.android.material:material:$versions.google_material_design"
google.guava = "com.google.guava:guava:$versions.google_guava"
deps.google = google

// AndroidX Foundation
def androidx = [:]
androidx.core = "androidx.core:core-ktx:$versions.androidx_core"
androidx.legacy = "androidx.legacy:legacy-support-v4:$versions.androidx_legacy"
androidx.futures = "androidx.concurrent:concurrent-futures:$versions.androidx_futures"
androidx.appcompat = "androidx.appcompat:appcompat:$versions.androidx_appcompat"
androidx.vector = "androidx.vectordrawable:vectordrawable:$versions.androidx_vector_drawable"
androidx.constraint = "androidx.constraintlayout:constraintlayout:$versions.androidx_constraint_layout"
androidx.viewpager = "androidx.viewpager:viewpager:$versions.androidx_view_pager"
androidx.emoji = "androidx.emoji:emoji-appcompat:$versions.androidx_emoji_appcompat"
androidx.test = "androidx.test:runner:$versions.androidx_test"
androidx.espresso = "androidx.test.espresso:espresso-core:$versions.androidx_espresso"
androidx.arch_test = "androidx.arch.core:core-testing:$versions.androidx_arch_test"
androidx.test_runner = "androidx.test.runner.AndroidJUnitRunner"
deps.androidx = androidx

// Architecture components
// Lifecycle
def lifecycle = [:]
lifecycle.viewmodel = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.androidx_lifecycle"
lifecycle.extension = "androidx.lifecycle:lifecycle-extensions:$versions.androidx_lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.androidx_lifecycle"
deps.lifecycle = lifecycle

// Room
def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.androidx_room"
room.compiler = "androidx.room:room-compiler:$versions.androidx_room"
room.ktx = "androidx.room:room-ktx:$versions.androidx_room"
room.test = "androidx.room:room-testing:$versions.androidx_room" // Test
deps.room = room

// Navigation controller
def navigation = [:]
navigation.fragment = "androidx.navigation:navigation-fragment-ktx:$versions.androidx_navigation_controller"
navigation.ui = "androidx.navigation:navigation-ui-ktx:$versions.androidx_navigation_controller"
navigation.safe = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.androidx_navigation_controller"
deps.navigation = navigation

// Paging
def paging = [:]
paging.runtime = "androidx.paging:paging-runtime-ktx:$versions.androidx_paging"
paging.test = "androidx.paging:paging-common:$versions.androidx_paging"
deps.paging = paging

// WorkManager
def work = [:]
work.runtime = "androidx.work:work-runtime-ktx:$versions.androidx_work_manager"
work.test = "androidx.work:work-testing:$versions.androidx_work_manager"
deps.work = work

// Firebase components
def firebase = [:]
firebase.core = "com.google.firebase:firebase-core:$versions.firebase_core"
firebase.crashlytics = "com.crashlytics.sdk.android:crashlytics:$versions.firebase_crashlytics"
firebase.config = "com.google.firebase:firebase-config:$versions.firebase_remote_config"
firebase.appindex = "com.google.firebase:firebase-appindexing:$versions.firebase_app_indexing"
deps.firebase = firebase

// Dependency Injection
def koin = [:]
koin.viewmodel = "org.koin:koin-androidx-viewmodel:$versions.koin"
koin.test = "org.koin:koin-test:$versions.koin"
deps.koin = koin

// Network components
// Kotlin coroutines
def coroutines = [:]
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinx_coroutines"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinx_coroutines"
deps.coroutines = coroutines

// Retrofit
def retrofit = [:]
retrofit.core = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.moshi = "com.squareup.retrofit2:converter-moshi:$versions.retrofit" // Moshi
retrofit.coroutines = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.retrofit_koltin_coroutines_adapter"
deps.retrofit = retrofit

// Moshi
def moshi = [:]
moshi.core = "com.squareup.moshi:moshi:$versions.moshi"
moshi.kotlin = "com.squareup.moshi:moshi-kotlin:$versions.moshi"
moshi.codegen = "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"
moshi.adapters = "com.squareup.moshi:moshi-adapters:$versions.moshi"
deps.moshi = moshi

// OkHttp
def okhttp = [:]
okhttp.core = "com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.logging = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
deps.okhttp = okhttp

// Glide
def glide = [:]
glide.core = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

// Stetho
def stetho = [:]
stetho.core = "com.facebook.stetho:stetho:$versions.stetho"
stetho.okhttp = "com.facebook.stetho:stetho-okhttp3:$versions.stetho"
deps.stetho = stetho

// Utilities
// Leak Canary
def leak_canary = [:]
leak_canary.core = "com.squareup.leakcanary:leakcanary-android:$versions.leak_canary"
leak_canary.no_op = "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leak_canary"
leak_canary.fragment = "com.squareup.leakcanary:leakcanary-support-fragment:$versions.leak_canary"
deps.leak_canary = leak_canary

// Utilities
def utilities = [:]
utilities.shimmer = "com.facebook.shimmer:shimmer:$versions.facebook_shimmer"
utilities.timber = "com.jakewharton.timber:timber:$versions.timber"
utilities.three_ten_abp = "com.jakewharton.threetenabp:threetenabp:$versions.three_ten_abp"
utilities.sdp = "com.intuit.sdp:sdp-android:$versions.sdp"
utilities.circle_image_view = "de.hdodenhof:circleimageview:$versions.circle_image_view"
deps.utilities = utilities

// Test
def test = [:]
test.junit = "junit:junit:$versions.junit"
deps.test = test

ext.deps = deps // Add dependencies to extension

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://maven.fabric.io/public' }
    handler.maven { url 'https://kotlin.bintray.com/kotlinx/' }
    handler.mavenCentral()
}
ext.addRepos = this.&addRepos // Add repositories to extension


